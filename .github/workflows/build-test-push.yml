name: Build, Test, and Push Docker Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      image_name:
        description: "Name of the service to build, test, and push (leave blank to run all)"
        required: false
        default: ""

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      # List all services here:
      matrix:
        service: [
          "2fa_service",
          "action_service",
          "central_gateway",
          "central_sequence_service",
          "character_service",
          "core_script_management_service",
          "fountainai-rbac",
          "kms-app",
          "notification-service",
          "paraphrase_service",
          "performer_service",
          "session_context_service",
          "spokenword_service",
          "story_factory_service",
          "typesense_client_service"
        ]
      max-parallel: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Decide whether to skip this particular matrix entry based on 'image_name'
      - name: Check if we should skip
        id: skip-check
        run: |
          if [ "${{ github.event.inputs.image_name }}" != "" ] && [ "${{ github.event.inputs.image_name }}" != "${{ matrix.service }}" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT

      # If skip==true, exit early for this matrix service
      - name: Skip if needed
        if: ${{ steps.skip-check.outputs.skip == 'true' }}
        run: |
          echo "Skipping service ${{ matrix.service }} because it doesn't match dispatch input."
          exit 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run test suite for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          # Example test command. Adjust as needed.
          export PYTHONPATH=$(pwd)
          chmod +x entrypoint.sh
          ./entrypoint.sh pytest --maxfail=1 --disable-warnings -q

      - name: Build Docker image for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          docker build \
            -t ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest \
            .

      - name: Push Docker image for ${{ matrix.service }}
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
