name: Build, Test, and Push Docker Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - 2fa_service
          - action_service
          - central_gateway
          - central_sequence_service
          - character_service
          - core_script_management_service
          - fountainai-rbac
          - kms-app
          - notification-service
          - paraphrase_service
          - performer_service
          - session_context_service
          - spokenword_service
          - story_factory_service
          - typesense_client_service

    steps:
      # 1. Checkout the repository.
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Python environment.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Log in to GitHub Container Registry.
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Install dependencies in the service directory (if any).
      - name: Install dependencies for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 5. Run the test suite for the current service via entrypoint.sh.
      #    This step calls the unchanged entrypoint.sh (which calls "python -m pytest")
      #    and relies on the actions/setup-python environment.
      - name: Run test suite for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          export PYTHONPATH=$(pwd)
          chmod +x entrypoint.sh
          ./entrypoint.sh pytest --maxfail=1 --disable-warnings -q

      # 6. Build the Docker image for the current service.
      - name: Build Docker image for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: docker build -t ${{ matrix.service }}:latest .

      # 7. Tag the Docker image for GHCR.
      - name: Tag Docker image for ${{ matrix.service }}
        run: docker tag ${{ matrix.service }}:latest ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest

      # 8. Push the tagged Docker image to GHCR.
      - name: Push Docker image for ${{ matrix.service }}
        run: docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
